# app/sitemap.py
from flask import Blueprint, Response
from flask_sqlalchemy import SQLAlchemy
from app.models import Post
from datetime import datetime

# Não importe db diretamente, vamos criar uma instância
sitemap_bp = Blueprint('sitemap', __name__)

def init_sitemap(db):
    """Inicializa o sitemap com a instância do db"""
    
    @sitemap_bp.route('/sitemap.xml')
    def sitemap():
        """Gera sitemap XML dinâmico"""
        base_url = "https://casamentoplanoinfalivel.com.br"
        
        # URLs estáticas
        urls = [
            {'loc': '/', 'priority': '1.0', 'changefreq': 'weekly'},
            {'loc': '/blog', 'priority': '0.8', 'changefreq': 'weekly'},
            {'loc': '/eventos', 'priority': '0.7', 'changefreq': 'monthly'},
             {'loc': '/casamento-em-crise', 'priority': '0.7', 'changefreq': 'monthly'},
            {'loc': '/#sobre', 'priority': '0.6', 'changefreq': 'monthly'},
            {'loc': '/#depoimentos', 'priority': '0.6', 'changefreq': 'monthly'},
            {'loc': '/#recursos', 'priority': '0.6', 'changefreq': 'monthly'},
        ]
        
        # Posts do blog (se o db estiver disponível)
        try:
            posts = Post.query.filter_by(is_published=True).all()
            for post in posts:
                urls.append({
                    'loc': f'/blog/{post.slug}',
                    'priority': '0.8',
                    'changefreq': 'monthly',
                    'lastmod': post.date_posted.strftime('%Y-%m-%d')
                })
        except:
            # Se não conseguir acessar o banco, continua sem posts
            pass
        
        # Gerar XML
        xml = ['<?xml version="1.0" encoding="UTF-8"?>']
        xml.append('<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">')
        
        for url in urls:
            xml.append('  <url>')
            xml.append(f'    <loc>{base_url}{url["loc"]}</loc>')
            xml.append(f'    <priority>{url["priority"]}</priority>')
            xml.append(f'    <changefreq>{url["changefreq"]}</changefreq>')
            if 'lastmod' in url:
                xml.append(f'    <lastmod>{url["lastmod"]}</lastmod>')
            xml.append('  </url>')
        
        xml.append('</urlset>')
        
        return Response('\n'.join(xml), mimetype='application/xml')
    
    return sitemap_bp